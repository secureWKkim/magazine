<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="http://localhost:4000/magazine/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/magazine/" rel="alternate" type="text/html" /><updated>2025-04-09T19:37:29+09:00</updated><id>http://localhost:4000/magazine/feed.xml</id><title type="html">Eyes can blaze like Meteors!🌠</title><subtitle>Mundana is a free Jekyll theme for awesome people like you, Medium like.</subtitle><entry><title type="html">게임 개발은 유니티 하나로 끝? 게임 개발의 기술 스택과 구조 이해하기 (feat.MMORPG, 퍼즐)</title><link href="http://localhost:4000/magazine/about-game-program-architecture/" rel="alternate" type="text/html" title="게임 개발은 유니티 하나로 끝? 게임 개발의 기술 스택과 구조 이해하기 (feat.MMORPG, 퍼즐)" /><published>2025-04-09T00:00:00+09:00</published><updated>2025-04-09T00:00:00+09:00</updated><id>http://localhost:4000/magazine/about-game-program-architecture</id><content type="html" xml:base="http://localhost:4000/magazine/about-game-program-architecture/"><![CDATA[<p>저는 웹, 앱, 데이터 분야 개발에는 익숙하지만, 게임 개발은 유니티와 언리얼만 알 뿐 구조나 기술 스택은 생소하여 이 글을 쓰게 되었습니다. 간단하게 공부해본 결과, 게임은 클라이언트-서버 아키텍처는 물론 실시간 통신, 인프라, 운영 툴까지 웹/앱 이상으로 복잡한 구조를 갖추고 있었습니다. 이 글에서는 게임 개발의 전체적인 아키텍처와 사용 기술, 엔진의 역할까지 정리했습니다.<br /><br /><br /></p>

<h3 id="-게임-개발의-전체-구조">🎮 게임 개발의 전체 구조</h3>

<p>게임 개발도 웹 서비스처럼 <strong>기획 → 개발 → 테스트 → 출시 → 운영</strong>이라는 사이클을 따릅니다. 하지만 내부 구조와 요구되는 기술은 꽤 다릅니다.<br />
게임은 무엇보다 <strong>실시간성</strong>과 <strong>높은 사용자 경험(UX)</strong>을 요구하기 때문에, 아키텍처도 여기에 맞춰 구성됩니다.<br /><br /><br /></p>

<h3 id="️-기본-아키텍처-클라이언트---서버---db">🏗️ 기본 아키텍처: 클라이언트 - 서버 - DB</h3>

<p>게임도 기본적으로는 클라이언트와 서버, 그리고 데이터 저장소로 구성됩니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[클라이언트(Unity/Unreal)]  &lt;--&gt;  [게임 서버]  &lt;--&gt;  [DB, 캐시 등]
                                        │
                                        └── [운영툴 서버, API 게이트웨이 등]
</code></pre></div></div>

<h4 id="-클라이언트">🔹 클라이언트</h4>
<ul>
  <li>Unity (C#), Unreal Engine (C++) 등 게임 엔진을 사용</li>
  <li>그래픽, 물리 엔진, UI, 애니메이션, 사운드, 입력 처리 등 포함</li>
  <li>WebSocket이나 TCP/UDP 통신 기능 내장 또는 확장 가능</li>
</ul>

<h4 id="-게임-서버">🔹 게임 서버</h4>
<ul>
  <li>실시간 멀티플레이, 전투 로직, 유저 세션, 매치메이킹 등 처리</li>
  <li>Java, Node.js, Go, C#, C++ 등 다양한 언어로 커스텀 구현</li>
  <li>Redis, MySQL, MongoDB, Cassandra 등 다양한 DB 사용
<br /><br /><br /></li>
</ul>

<h3 id="-게임-서버-구조는-어떻게-생겼을까">🧠 게임 서버 구조는 어떻게 생겼을까?</h3>

<p>게임의 장르에 따라 서버 구조도 달라집니다.</p>

<p>예를 들어 MMORPG처럼 대규모 유저가 동시에 접속하는 게임은 다음과 같은 <strong>마이크로서비스 아키텍처</strong> 형태를 가질 수 있습니다.</p>
<ul>
  <li>Zone 서버 (맵/지역 단위로 분리)</li>
  <li>매치메이킹 서버</li>
  <li>채팅 서버</li>
  <li>AI 서버</li>
  <li>인증 및 과금 서버</li>
  <li>운영툴 서버</li>
</ul>

<p>실시간 처리를 위해 TCP/UDP 기반 통신을 주로 사용하고, 일부 시스템은 REST API나 gRPC로도 구성합니다.
<br /></p>

<p>그렇다면 퍼즐 게임은 어떨까요? 경우에 따라 다르지만, 여기선 MMORPG에 비하면 비교적 단순한 <strong>클라이언트-서버</strong> 구조를 갖는 예시로 캐주얼 퍼즐 게임을 들어보겠습니다.</p>

<p>캔디크러쉬사가, 애니팡 같은 캐주얼 퍼즐 게임의 특징은 다음과 같습니다.</p>
<ul>
  <li>싱글 플레이 중심</li>
  <li>실시간성 거의 없음</li>
  <li>서버는 주로 유저 정보 동기화, 랭킹, 광고, 과금 처리 담당</li>
  <li>대부분은 비동기 구조 + 클라이언트 중심 설계</li>
</ul>

<p>따라서 클라이언트가 대부분의 게임 로직을 처리하고, 서버는 기록과 검증만 맡는 구조가 일반적입니다. 이 경우 서버는 주로 다음과 같은 기능을 수행합니다.</p>
<ul>
  <li>유저 계정 관리 (게스트, 소셜 로그인 등)</li>
  <li>스테이지 클리어 기록 저장</li>
  <li>하트, 아이템 보유량 동기화</li>
  <li>과금/광고 보상 처리</li>
  <li>랭킹 (주로 비동기: 일일/주간 등)</li>
</ul>

<p>이 경우 DB에는 유저 상태, 인벤토리 등이 저장될 것이고, 광고, 결제, 랭킹, 푸시 등의 기능은 내외부 API가 수행할 것입니다.
<br /><br /><br /></p>

<h3 id="-유니티언리얼의-주요-역할">🧱 유니티/언리얼의 주요 역할</h3>

<p>유니티와 언리얼은 주로 <strong>클라이언트 개발</strong>에 집중된 엔진입니다.</p>

<h4 id="주요-역할">주요 역할:</h4>
<ul>
  <li>3D/2D 렌더링</li>
  <li>물리 엔진 처리</li>
  <li>UI 구성</li>
  <li>애니메이션 시스템</li>
  <li>오디오 처리</li>
  <li>일부 네트워크 기능</li>
</ul>

<p>그렇기 때문에 유니티, 언리얼이 기획자에게 프로토타이핑 툴로도 쓰일 수 있는 것입니다. 반면, 주 역할이 아닌 것은 다음과 같습니다.</p>
<ul>
  <li>게임 서버 로직 개발 (멀티플레이 동기화, 매치메이킹 등)</li>
  <li>데이터베이스 저장/조회</li>
  <li>인증, 과금, 이벤트 운영</li>
  <li>대시보드/운영툴 개발</li>
  <li>로그 수집, 분석</li>
</ul>

<p>그렇지만 앞서 나왔던 캐주얼 퍼즐 장르처럼 비교적 단순한 게임의 경우, 클라이언트가 게임의 주요 로직을 처리하기도 합니다.
<br /><br /><br /></p>

<h3 id="-주요-기술-스택">🧰 주요 기술 스택</h3>
<p>게임 클라이언트, 서버, 인프라/DevOps 분야의 주요 기술 스택을 정리하면 다음과 같습니다.</p>

<h4 id="-클라이언트-1">🎮 클라이언트</h4>

<table>
  <thead>
    <tr>
      <th>기능</th>
      <th>기술 스택</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>그래픽/물리/애니메이션</td>
      <td>Unity, Unreal Engine</td>
    </tr>
    <tr>
      <td>UI</td>
      <td>엔진 내 UI 시스템, TextMeshPro 등</td>
    </tr>
    <tr>
      <td>오디오</td>
      <td>FMOD, Wwise 등</td>
    </tr>
    <tr>
      <td>네트워크</td>
      <td>WebSocket, TCP/UDP, Photon, Mirror 등</td>
    </tr>
  </tbody>
</table>

<h4 id="-서버">🧠 서버</h4>

<table>
  <thead>
    <tr>
      <th>기능</th>
      <th>기술 스택</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>게임 로직</td>
      <td>Java, Node.js, C#, C++ 등</td>
    </tr>
    <tr>
      <td>데이터 저장</td>
      <td>MySQL, MongoDB, Redis, Cassandra 등</td>
    </tr>
    <tr>
      <td>세션/매치메이킹</td>
      <td>자체 구현 또는 BaaS (PlayFab, Nakama 등)</td>
    </tr>
    <tr>
      <td>인증/결제</td>
      <td>OAuth, Firebase Auth, AWS Cognito 등</td>
    </tr>
  </tbody>
</table>

<h4 id="-인프라-및-devops">🛠 인프라 및 DevOps</h4>

<ul>
  <li><strong>인프라</strong>: Docker, Kubernetes, AWS/GCP</li>
  <li><strong>배포/CI</strong>: GitHub Actions, Jenkins, ArgoCD</li>
  <li><strong>모니터링/로깅</strong>: Prometheus, Grafana, ELK, Sentry</li>
  <li><strong>콘텐츠 배포</strong>: CDN 기반 패치 시스템
<br /><br /><br /></li>
</ul>

<h3 id="-마무리">✅ 마무리</h3>

<p>게임 개발은 처음 접하면 유니티, 언리얼로 모든 걸 다 할 수 있을 것 같지만, 실제로는 복잡한 분산 시스템과 다양한 기술 스택이 함께 움직이는 종합 개발입니다.</p>

<p>웹이나 앱 개발에 익숙한 사람이라면, <strong>서버 아키텍처, 통신 구조, DevOps 등 익숙한 개념들이 게임에서도 적용되지만</strong>, <strong>실시간성과 사용자 경험에 훨씬 민감한 환경</strong>이라는 점이 차이점입니다.</p>

<p>처음 게임 개발을 알아보시는 다른 분들에게도 이 글이 도움되었길 바라며 마치겠습니다.</p>]]></content><author><name>Dr.Meteor</name></author><category term="Game Development" /><summary type="html"><![CDATA[저는 웹, 앱, 데이터 분야 개발에는 익숙하지만, 게임 개발은 유니티와 언리얼만 알 뿐 구조나 기술 스택은 생소하여 이 글을 쓰게 되었습니다. 간단하게 공부해본 결과, 게임은 클라이언트-서버 아키텍처는 물론 실시간 통신, 인프라, 운영 툴까지 웹/앱 이상으로 복잡한 구조를 갖추고 있었습니다. 이 글에서는 게임 개발의 전체적인 아키텍처와 사용 기술, 엔진의 역할까지 정리했습니다.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/magazine/assets/images/11.jpg" /><media:content medium="image" url="http://localhost:4000/magazine/assets/images/11.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/magazine/welcome-to-jekyll/" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2019-02-04T00:00:00+09:00</published><updated>2019-02-04T00:00:00+09:00</updated><id>http://localhost:4000/magazine/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/magazine/welcome-to-jekyll/"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>To add new posts, simply add a file in the <code class="language-plaintext highlighter-rouge">_posts</code> directory that follows the convention <code class="language-plaintext highlighter-rouge">YYYY-MM-DD-name-of-post.ext</code> and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name>Dr.Meteor</name></author><category term="Jekyll" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/magazine/assets/images/demo1.jpg" /><media:content medium="image" url="http://localhost:4000/magazine/assets/images/demo1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Powerful things you can do with the Markdown editor</title><link href="http://localhost:4000/magazine/powerful-things-markdown-editor/" rel="alternate" type="text/html" title="Powerful things you can do with the Markdown editor" /><published>2019-02-03T00:00:00+09:00</published><updated>2019-02-03T00:00:00+09:00</updated><id>http://localhost:4000/magazine/powerful-things-markdown-editor</id><content type="html" xml:base="http://localhost:4000/magazine/powerful-things-markdown-editor/"><![CDATA[<p>There are lots of powerful things you can do with the Markdown editor. If you’ve gotten pretty comfortable with writing in Markdown, then you may enjoy some more advanced tips about the types of things you can do with Markdown!</p>

<p>As with the last post about the editor, you’ll want to be actually editing this post as you read it so that you can see all the Markdown code we’re using.</p>

<h2 id="special-formatting">Special formatting</h2>

<p>As well as bold and italics, you can also use some other special formatting in Markdown when the need arises, for example:</p>

<ul>
  <li><del>strike through</del></li>
  <li>==highlight==</li>
  <li>*escaped characters*</li>
</ul>

<h2 id="writing-code-blocks">Writing code blocks</h2>

<p>There are two types of code elements which can be inserted in Markdown, the first is inline, and the other is block. Inline code is formatted by wrapping any word or words in back-ticks, <code class="language-plaintext highlighter-rouge">like this</code>. Larger snippets of code can be displayed across multiple lines using triple back ticks:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.my-link {
    text-decoration: underline;
}
</code></pre></div></div>

<p>If you want to get really fancy, you can even add syntax highlighting using Rouge.</p>

<p><img src="/magazine/assets/images/8.jpg" alt="walking" /></p>

<h2 id="reference-lists">Reference lists</h2>

<p>The quick brown jumped over the lazy.</p>

<p>Another way to insert links in markdown is using reference lists. You might want to use this style of linking to cite reference material in a Wikipedia-style. All of the links are listed at the end of the document, so you can maintain full separation between content and its source or reference.</p>

<h2 id="full-html">Full HTML</h2>

<p>Perhaps the best part of Markdown is that you’re never limited to just Markdown. You can write HTML directly in the Markdown editor and it will just work as HTML usually does. No limits! Here’s a standard YouTube embed code as an example:</p>

<p><iframe style="width:100%;" height="315" src="https://www.youtube.com/embed/Cniqsc9QfDo?rel=0&amp;showinfo=0" frameborder="0" allowfullscreen=""></iframe></p>]]></content><author><name>jane</name></author><category term="Jekyll" /><category term="tutorial" /><category term="summer" /><summary type="html"><![CDATA[There are lots of powerful things you can do with the Markdown editor. If you’ve gotten pretty comfortable with writing in Markdown, then you may enjoy some more advanced tips about the types of things you can do with Markdown!]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://images.unsplash.com/photo-1528784351875-d797d86873a1?ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=750&amp;q=80" /><media:content medium="image" url="https://images.unsplash.com/photo-1528784351875-d797d86873a1?ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=750&amp;q=80" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">The first mass-produced book to deviate from a rectilinear format</title><link href="http://localhost:4000/magazine/first-mass-produced/" rel="alternate" type="text/html" title="The first mass-produced book to deviate from a rectilinear format" /><published>2019-02-02T00:00:00+09:00</published><updated>2019-02-02T00:00:00+09:00</updated><id>http://localhost:4000/magazine/first-mass-produced</id><content type="html" xml:base="http://localhost:4000/magazine/first-mass-produced/"><![CDATA[<p>The first mass-produced book to deviate from a rectilinear format, at least in the United States, is thought to be this 1863 edition of Red Riding Hood, cut into the shape of the protagonist herself with the troublesome wolf curled at her feet. Produced by the Boston-based publisher Louis Prang, this is the first in their “Doll Series”, a set of five “die-cut” books, known also as shape books — the other titles being Robinson Crusoe, Goody Two-Shoes (also written by Red Riding Hood author Lydia Very), Cinderella, and King Winter.</p>

<p>An 1868 Prang catalogue would later claim that such “books in the shape of a regular paper Doll… originated with us”.</p>

<blockquote>
  <p>It would seem the claim could also extend to die cut books in general, as we can’t find anything sooner, but do let us know in the comments if you have further light to shed on this! Such books are, of course, still popular in children’s publishing today, though the die cutting is not now limited to mere outlines, as evidenced in a beautiful 2014 version of the same Little Red Riding Hood story.</p>
</blockquote>

<p>The die cut has also been employed in the non-juvenile sphere as well, a recent example being Jonathan Safran Foer’s ambitious Tree of Codes.</p>

<p>As for this particular rendition of Charles Perrault’s classic tale, the text and design is by Lydia Very (1823-1901), sister of Transcendentalist poet Jones Very. The gruesome ending of the original - which sees Little Red Riding Hood being gobbled up as well as her grandmother - is avoided here, the gore giving way to the less bloody aims of the morality tale, and the lesson that one should not disobey one’s mother.</p>

<p>To deviate from a rectilinear format, at least in the United States, is thought to be this 1863 edition of Red Riding Hood, cut into the shape of the protagonist herself with the troublesome wolf curled at her feet. Produced by the Boston-based publisher Louis Prang, this is the first in their “Doll Series”, a set of five “die-cut” books, known also as shape books — the other titles being Robinson Crusoe, Goody Two-Shoes (also written by Red Riding Hood author Lydia Very), Cinderella, and King Winter.</p>

<p>An 1868 Prang catalogue would later claim that such “books in the shape of a regular paper Doll… originated with us”.</p>

<blockquote>
  <p>The claim could also extend to die cut books in general, as we can’t find anything sooner, but do let us know in the comments if you have further light to shed on this! Such books are, of course, still popular in children’s publishing today, though the die cutting is not now limited to mere outlines, as evidenced in a beautiful 2014 version of the same Little Red Riding Hood story.</p>
</blockquote>

<p>The die cut has also been employed in the non-juvenile sphere as well, a recent example being Jonathan Safran Foer’s ambitious Tree of Codes.</p>

<p>As for this particular rendition of Charles Perrault’s classic tale, the text and design is by Lydia Very (1823-1901), sister of Transcendentalist poet Jones Very. The gruesome ending of the original - which sees Little Red Riding Hood being gobbled up as well as her grandmother - is avoided here, the gore giving way to the less bloody aims of the morality tale, and the lesson that one should not disobey one’s mother.</p>]]></content><author><name>sal</name></author><category term="tutorial" /><category term="featured" /><summary type="html"><![CDATA[The first mass-produced book to deviate from a rectilinear format, at least in the United States, is thought to be this 1863 edition of Red Riding Hood, cut into the shape of the protagonist herself with the troublesome wolf curled at her feet. Produced by the Boston-based publisher Louis Prang, this is the first in their “Doll Series”, a set of five “die-cut” books, known also as shape books — the other titles being Robinson Crusoe, Goody Two-Shoes (also written by Red Riding Hood author Lydia Very), Cinderella, and King Winter.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/magazine/assets/images/17.jpg" /><media:content medium="image" url="http://localhost:4000/magazine/assets/images/17.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Education must also train one for quick, resolute and effective thinking.</title><link href="http://localhost:4000/magazine/education/" rel="alternate" type="text/html" title="Education must also train one for quick, resolute and effective thinking." /><published>2019-02-01T00:00:00+09:00</published><updated>2019-02-01T00:00:00+09:00</updated><id>http://localhost:4000/magazine/education</id><content type="html" xml:base="http://localhost:4000/magazine/education/"><![CDATA[<p>There are lots of powerful things you can do with the Markdown editor</p>

<p>If you’ve gotten pretty comfortable with writing in Markdown, then you may enjoy some more advanced tips about the types of things you can do with Markdown!</p>

<p>As with the last post about the editor, you’ll want to be actually editing this post as you read it so that you can see all the Markdown code we’re using.</p>

<h2 id="special-formatting">Special formatting</h2>

<p>As well as bold and italics, you can also use some other special formatting in Markdown when the need arises, for example:</p>

<ul>
  <li><del>strike through</del></li>
  <li>==highlight==</li>
  <li>*escaped characters*</li>
</ul>

<h2 id="writing-code-blocks">Writing code blocks</h2>

<p>There are two types of code elements which can be inserted in Markdown, the first is inline, and the other is block. Inline code is formatted by wrapping any word or words in back-ticks, <code class="language-plaintext highlighter-rouge">like this</code>. Larger snippets of code can be displayed across multiple lines using triple back ticks:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.my-link {
    text-decoration: underline;
}
</code></pre></div></div>

<p>If you want to get really fancy, you can even add syntax highlighting using Rouge.</p>

<p><img src="/magazine/assets/images/8.jpg" alt="walking" /></p>

<h2 id="reference-lists">Reference lists</h2>

<p>The quick brown jumped over the lazy.</p>

<p>Another way to insert links in markdown is using reference lists. You might want to use this style of linking to cite reference material in a Wikipedia-style. All of the links are listed at the end of the document, so you can maintain full separation between content and its source or reference.</p>

<h2 id="full-html">Full HTML</h2>

<p>Perhaps the best part of Markdown is that you’re never limited to just Markdown. You can write HTML directly in the Markdown editor and it will just work as HTML usually does. No limits! Here’s a standard YouTube embed code as an example:</p>

<p><iframe style="width:100%;" height="315" src="https://www.youtube.com/embed/Cniqsc9QfDo?rel=0&amp;showinfo=0" frameborder="0" allowfullscreen=""></iframe></p>]]></content><author><name>Dr.Meteor</name></author><category term="Jekyll" /><category term="tutorial" /><summary type="html"><![CDATA[There are lots of powerful things you can do with the Markdown editor]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/magazine/assets/images/3.jpg" /><media:content medium="image" url="http://localhost:4000/magazine/assets/images/3.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Accumulated experience of social living</title><link href="http://localhost:4000/magazine/acumulated-experience/" rel="alternate" type="text/html" title="Accumulated experience of social living" /><published>2019-01-30T00:00:00+09:00</published><updated>2019-01-30T00:00:00+09:00</updated><id>http://localhost:4000/magazine/acumulated-experience</id><content type="html" xml:base="http://localhost:4000/magazine/acumulated-experience/"><![CDATA[<p>The die cut has also been employed in the non-juvenile sphere as well, a recent example being Jonathan Safran Foer’s ambitious Tree of Codes.</p>

<p>As for this particular rendition of Charles Perrault’s classic tale, the text and design is by Lydia Very (1823-1901), sister of Transcendentalist poet Jones Very. The gruesome ending of the original - which sees Little Red Riding Hood being gobbled up as well as her grandmother - is avoided here, the gore giving way to the less bloody aims of the morality tale, and the lesson that one should not disobey one’s mother.</p>

<p>The first mass-produced book to deviate from a rectilinear format, at least in the United States, is thought to be this 1863 edition of Red Riding Hood, cut into the shape of the protagonist herself with the troublesome wolf curled at her feet. Produced by the Boston-based publisher Louis Prang, this is the first in their “Doll Series”, a set of five “die-cut” books, known also as shape books — the other titles being Robinson Crusoe, Goody Two-Shoes (also written by Red Riding Hood author Lydia Very), Cinderella, and King Winter.</p>

<p>An 1868 Prang catalogue would later claim that such “books in the shape of a regular paper Doll… originated with us”.</p>

<blockquote>
  <p>It would seem the claim could also extend to die cut books in general, as we can’t find anything sooner, but do let us know in the comments if you have further light to shed on this! Such books are, of course, still popular in children’s publishing today, though the die cutting is not now limited to mere outlines, as evidenced in a beautiful 2014 version of the same Little Red Riding Hood story.</p>
</blockquote>]]></content><author><name>sal</name></author><category term="Jekyll" /><category term="tutorial" /><summary type="html"><![CDATA[The die cut has also been employed in the non-juvenile sphere as well, a recent example being Jonathan Safran Foer’s ambitious Tree of Codes.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/magazine/assets/images/15.jpg" /><media:content medium="image" url="http://localhost:4000/magazine/assets/images/15.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">About Bundler</title><link href="http://localhost:4000/magazine/about-bundler/" rel="alternate" type="text/html" title="About Bundler" /><published>2019-01-29T00:00:00+09:00</published><updated>2019-01-29T00:00:00+09:00</updated><id>http://localhost:4000/magazine/about-bundler</id><content type="html" xml:base="http://localhost:4000/magazine/about-bundler/"><![CDATA[<p><code class="language-plaintext highlighter-rouge">gem install bundler</code> installs the bundler gem through RubyGems. You only need to install it once - not every time you create a new Jekyll project. Here are some additional details:</p>

<p><code class="language-plaintext highlighter-rouge">bundler</code> is a gem that manages other Ruby gems. It makes sure your gems and gem versions are compatible, and that you have all necessary dependencies each gem requires.</p>

<p>The <code class="language-plaintext highlighter-rouge">Gemfile</code> and <code class="language-plaintext highlighter-rouge">Gemfile.lock</code> files inform <code class="language-plaintext highlighter-rouge">Bundler</code> about the gem requirements in your site. If your site doesn’t have these Gemfiles, you can omit <code class="language-plaintext highlighter-rouge">bundle exec</code> and just <code class="language-plaintext highlighter-rouge">run jekyll serve</code>.</p>

<p>When you run <code class="language-plaintext highlighter-rouge">bundle exec jekyll serve</code>, <code class="language-plaintext highlighter-rouge">Bundler</code> uses the gems and versions as specified in <code class="language-plaintext highlighter-rouge">Gemfile.lock</code> to ensure your Jekyll site builds with no compatibility or dependency conflicts.</p>

<p>For more information about how to use <code class="language-plaintext highlighter-rouge">Bundler</code> in your Jekyll project, this tutorial should provide answers to the most common questions and explain how to get up and running quickly.</p>]]></content><author><name>sal</name></author><category term="Jekyll" /><summary type="html"><![CDATA[gem install bundler installs the bundler gem through RubyGems. You only need to install it once - not every time you create a new Jekyll project. Here are some additional details:]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/magazine/assets/images/2.jpg" /><media:content medium="image" url="http://localhost:4000/magazine/assets/images/2.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">We all wait for summer</title><link href="http://localhost:4000/magazine/we-all-wait-for-summer/" rel="alternate" type="text/html" title="We all wait for summer" /><published>2019-01-28T00:00:00+09:00</published><updated>2019-01-28T00:00:00+09:00</updated><id>http://localhost:4000/magazine/we-all-wait-for-summer</id><content type="html" xml:base="http://localhost:4000/magazine/we-all-wait-for-summer/"><![CDATA[<p>This is changed. As I engage in the so-called “bull sessions” around and about the school, I too often find that most college men have a misconception of the purpose of education. Most of the “brethren” think that <a href="#">education should equip</a> them with the proper instruments of exploitation so that they can forever trample over the masses. Still others think that education should furnish them with noble ends rather than means to an end.</p>

<p>It seems to me that education has a two-fold function to perform in the life of man and in society: the one is utility and the other is culture. Education must enable a man to become more efficient, to achieve with increasing facility the ligitimate goals of his life.</p>]]></content><author><name>jane</name></author><category term="Jekyll" /><category term="tutorial" /><category term="featured" /><summary type="html"><![CDATA[This is changed. As I engage in the so-called “bull sessions” around and about the school, I too often find that most college men have a misconception of the purpose of education. Most of the “brethren” think that education should equip them with the proper instruments of exploitation so that they can forever trample over the masses. Still others think that education should furnish them with noble ends rather than means to an end.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/magazine/assets/images/1.jpg" /><media:content medium="image" url="http://localhost:4000/magazine/assets/images/1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Tree of Codes</title><link href="http://localhost:4000/magazine/tree-of-codes/" rel="alternate" type="text/html" title="Tree of Codes" /><published>2019-01-27T00:00:00+09:00</published><updated>2019-01-27T00:00:00+09:00</updated><id>http://localhost:4000/magazine/tree-of-codes</id><content type="html" xml:base="http://localhost:4000/magazine/tree-of-codes/"><![CDATA[<p>The first mass-produced book to deviate from a rectilinear format, at least in the United States, is thought to be this 1863 edition of Red Riding Hood, cut into the shape of the protagonist herself with the troublesome wolf curled at her feet. Produced by the Boston-based publisher Louis Prang, this is the first in their “Doll Series”, a set of five “die-cut” books, known also as shape books — the other titles being Robinson Crusoe, Goody Two-Shoes (also written by Red Riding Hood author Lydia Very), Cinderella, and King Winter.</p>

<p>As for this particular rendition of Charles Perrault’s classic tale, the text and design is by Lydia Very (1823-1901), sister of Transcendentalist poet Jones Very. The gruesome ending of the original — which sees Little Red Riding Hood being gobbled up as well as her grandmother — is avoided here, the gore giving way to the less bloody aims of the morality tale, and the lesson that one should not disobey one’s mother.</p>

<blockquote>
  <p>It would seem the claim could also extend to die cut books in general, as we can’t find anything sooner, but do let us know in the comments if you have further light to shed on this! Such books are, of course, still popular in children’s publishing today, though the die cutting is not now limited to mere outlines, as evidenced in a beautiful 2014 version of the same Little Red Riding Hood story.</p>
</blockquote>

<p>An 1868 Prang catalogue would later claim that such “books in the shape of a regular paper Doll… originated with us”.</p>

<p>The die cut has also been employed in the non-juvenile sphere as well, a recent example being Jonathan Safran Foer’s ambitious Tree of Codes.</p>]]></content><author><name>sal</name></author><category term="Jekyll" /><category term="tutorial" /><summary type="html"><![CDATA[The first mass-produced book to deviate from a rectilinear format, at least in the United States, is thought to be this 1863 edition of Red Riding Hood, cut into the shape of the protagonist herself with the troublesome wolf curled at her feet. Produced by the Boston-based publisher Louis Prang, this is the first in their “Doll Series”, a set of five “die-cut” books, known also as shape books — the other titles being Robinson Crusoe, Goody Two-Shoes (also written by Red Riding Hood author Lydia Very), Cinderella, and King Winter.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/magazine/assets/images/2.jpg" /><media:content medium="image" url="http://localhost:4000/magazine/assets/images/2.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Red Riding Hood</title><link href="http://localhost:4000/magazine/red-riding/" rel="alternate" type="text/html" title="Red Riding Hood" /><published>2019-01-26T00:00:00+09:00</published><updated>2019-01-26T00:00:00+09:00</updated><id>http://localhost:4000/magazine/red-riding</id><content type="html" xml:base="http://localhost:4000/magazine/red-riding/"><![CDATA[<p>The first mass-produced book to deviate from a rectilinear format, at least in the United States, is thought to be this 1863 edition of Red Riding Hood, cut into the shape of the protagonist herself with the troublesome wolf curled at her feet. Produced by the Boston-based publisher Louis Prang, this is the first in their “Doll Series”, a set of five “die-cut” books, known also as shape books — the other titles being Robinson Crusoe, Goody Two-Shoes (also written by Red Riding Hood author Lydia Very), Cinderella, and King Winter.</p>

<p>An 1868 Prang catalogue would later claim that such “books in the shape of a regular paper Doll… originated with us”.</p>

<blockquote>
  <p>It would seem the claim could also extend to die cut books in general, as we can’t find anything sooner, but do let us know in the comments if you have further light to shed on this! Such books are, of course, still popular in children’s publishing today, though the die cutting is not now limited to mere outlines, as evidenced in a beautiful 2014 version of the same Little Red Riding Hood story.</p>
</blockquote>

<p>The die cut has also been employed in the non-juvenile sphere as well, a recent example being Jonathan Safran Foer’s ambitious Tree of Codes.</p>

<p>As for this particular rendition of Charles Perrault’s classic tale, the text and design is by Lydia Very (1823-1901), sister of Transcendentalist poet Jones Very. The gruesome ending of the original — which sees Little Red Riding Hood being gobbled up as well as her grandmother — is avoided here, the gore giving way to the less bloody aims of the morality tale, and the lesson that one should not disobey one’s mother.</p>]]></content><author><name>sal</name></author><category term="Jekyll" /><category term="tutorial" /><summary type="html"><![CDATA[The first mass-produced book to deviate from a rectilinear format, at least in the United States, is thought to be this 1863 edition of Red Riding Hood, cut into the shape of the protagonist herself with the troublesome wolf curled at her feet. Produced by the Boston-based publisher Louis Prang, this is the first in their “Doll Series”, a set of five “die-cut” books, known also as shape books — the other titles being Robinson Crusoe, Goody Two-Shoes (also written by Red Riding Hood author Lydia Very), Cinderella, and King Winter.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/magazine/assets/images/3.jpg" /><media:content medium="image" url="http://localhost:4000/magazine/assets/images/3.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>